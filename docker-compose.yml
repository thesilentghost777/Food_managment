services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: food-management-app
    command: gunicorn --bind 0.0.0.0:5000 --timeout 120 --workers 2 --log-level info wsgi:application
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=ae1f96e41c3d456cb0843a4c6bd25b2f38b7f24e2a8c1d9a6c5b9fbbf234a7ea
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=food_management
      - DB_USER=ghost
      - DB_PASSWORD=ghost
      - DATABASE_URL=postgresql://ghost:ghost@postgres:5432/food_management
    volumes:
      - ./instance:/app/instance
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - food-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 45s
      timeout: 15s
      retries: 5
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    container_name: food-management-postgres
    environment:
      POSTGRES_DB: food_management
      POSTGRES_USER: ghost
      POSTGRES_PASSWORD: ghost
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped
    networks:
      - food-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ghost -d food_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service pour afficher le message de démarrage
  init-message:
    image: busybox
    container_name: food-management-init-message
    depends_on:
      - web
      - postgres  
    command: >
      sh -c "
      echo '';
      echo '🔥 ====================================== 🔥';
      echo '🚀 FOOD MANAGEMENT APP DÉMARRÉ !';
      echo '🔥 ====================================== 🔥';
      echo '';
      echo '📱 Application Flask : http://localhost:5000';
      echo '🗄️  Base de données PostgreSQL : localhost:5433';
      echo '';
      echo '✅ Services essentiels démarrés !';
      echo '🎯 Votre application est prête à être utilisée.';
      echo '';
      echo '🔥 ====================================== 🔥';
      echo '';
      sleep 3;
      "
    restart: "no"
    networks:
      - food-network

volumes:
  postgres_data:
    driver: local

networks:
  food-network:
    driver: bridge
